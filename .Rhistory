library(knitr)
library(caret)
library(lattice)
library(ggplot2)
library(knitr)
library(caret)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
cleanData <- data[, colSums(is.na(data)) == 0]
inTrain <- createDataPartition(y=cleanData$classe, p=0.75, list=FALSE)
training <- cleanData[inTrain,]
testing <- cleanData[-inTrain,]
set.seed(32343)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=testing)
confusionMatrix(predictions1,testing$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=testing)
confusionMatrix(predictions2,testing$classe)
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA"))
answers <- predict(modelFit2,newdata=testData)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
cleanData <- data[, colSums(is.na(data)) == 0]
inTrain <- createDataPartition(y=cleanData$classe, p=0.75, list=FALSE)
library(lattice)
library(ggplot2)
library(knitr)
library(caret)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
cleanData <- data[, colSums(is.na(data)) == 0]
install.pakcages("caret")
install.packages("caret")
install.packages("caret")
library(lattice)
library(ggplot2)
library(knitr)
library(caret)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
inTrain <- createDataPartition(y=data$classe, p=0.75, list=FALSE)
training <- data[inTrain,]
test <- data[-inTrain,]
training <- training[, colSums(is.na(data)) == 0]
set.seed(32343)
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,testing$classe)
test <- data[-inTrain,]
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
answers <- predict(modelFit2,newdata=testData)
testing <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA"))
answers <- predict(modelFit2,newdata=testing)
?predict
names(test)
names(testing)
head(testing)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
data <- data[, colSums(is.na(data)) == 0]
inTrain <- createDataPartition(y=data$classe, p=0.75, list=FALSE)
training <- data[inTrain,]
test <- data[-inTrain,]
set.seed(32343)
library(rpart)
modelFit1 <- rpart(classe ~., data=training)
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
test <- data[-inTrain,]
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
rm(list=ls())
library(lattice)
library(ggplot2)
library(knitr)
library(caret)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA"))
data <- data[, colSums(is.na(data)) == 0]
str(data)
names(data)
inTrain <- createDataPartition(y=data$classe, p=0.75, list=FALSE)
training <- data[inTrain,]
test <- data[-inTrain,]
set.seed(32343)
library(rpart)
modelFit1 <- rpart(classe ~., data=training)
predictions1 <- predict(modelFit1,newdata=test)
predictions1
confusionMatrix(predictions1,test$classe)
cleanData <- data[, colSums(is.na(data)) == 0]
inTrain <- createDataPartition(y=cleanData$classe, p=0.75, list=FALSE)
training <- cleanData[inTrain,]
test <- cleanData[-inTrain,]
set.seed(32343)
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
testing <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA"))
answers <- predict(modelFit2,newdata=testing)
modelFit2
answers <- predict(modelFit2,newdata=testing, type="class")
library(lattice)
library(ggplot2)
library(knitr)
library(caret)
data <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
cleanData <- data[, colSums(is.na(data)) == 0]
inTrain <- createDataPartition(y=cleanData$classe, p=0.75, list=FALSE)
training <- cleanData[inTrain,]
test <- cleanData[-inTrain,]
set.seed(32343)
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
set.seed(1234)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
testing <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
answers <- predict(modelFit2,newdata=testing, type="class")
testingData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testingData <- testingData[, colSums(is.na(testingData)) == 0]
answers <- predict(modelFit2,newdata=testingData)
testingData
names(testingData)
rm(list=ls())
library(knitr)
library(caret)
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testingData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testingData <- testingData[, colSums(is.na(testingData)) == 0]
set.seed(32343)
inTrain <- createDataPartition(y=trainingData$classe, p=0.75, list=FALSE)
training <- trainingData[inTrain,]
test <- trainingData[-inTrain,]
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
answers <- predict(modelFit2,newdata=testingData)
predict(modelFit2,newdata=testingData)
names(trainingData)
names(testingData)
trainingData
dim(trainingData)
dim(testingData)
modelFit2
predict(modelFit2,newdata=testingData)
print(modelFit2)
answers <- predict(modelFit2,newdata=testingData[,-1])
testingData[,-1]
names(testingData[, -1])
predict(modelFit2,newdata=testingData[,-60])
str(training)
str(testingData)
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testingData <- testingData[, colSums(is.na(testingData)) == 0]
trainingData <- trainingData[,-c(1:7)]
testingData <- testingData[,-c(1:7)]
inTrain <- createDataPartition(y=trainingData$classe, p=0.75, list=FALSE)
training <- trainingData[inTrain,]
test <- trainingData[-inTrain,]
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,test$classe)
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=test)
confusionMatrix(predictions2,test$classe)
answers <- predict(modelFit2,newdata=testingData)
answers <- predict(modelFit2,newdata=testingData)
answers
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(answers)
library(knitr)
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testData <- testData[, colSums(is.na(testingData)) == 0]
testData <- testData[, colSums(is.na(testData)) == 0]
trainingData <- trainingData[,-c(1:7)]
testData <- testData[,-c(1:7)]
names(trainingData)[1:7,]
names(trainingData)[1:7]
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testData <- testData[, colSums(is.na(testData)) == 0]
names(trainingData)[1:7]
trainingData[,1:7]
head(trainingData[,1:7])
names(trainingData)[1:7]
library(knitr)
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testData <- testData[, colSums(is.na(testData)) == 0]
trainingData <- trainingData[,-c(1:7)]
testData <- testData[,-c(1:7)]
set.seed(32343)
library(caret)
### Split training data to training/testing for one time cross-validation
inTrain <- createDataPartition(y=trainingData$classe, p=0.75, list=FALSE)
training <- trainingData[inTrain,]
testing <- trainingData[-inTrain,]
library(rpart)
modelFit1 <- train(classe ~., data=training, method="rpart")
predictions1 <- predict(modelFit1,newdata=test)
confusionMatrix(predictions1,testing$classe)
predictions1 <- predict(modelFit1,newdata=testing)
confusionMatrix(predictions1,testing$classe)
confusionMatrix(predictions1,testing$classe)$Accuracy
str(confusionMatrix(predictions1,testing$classe))
confusionMatrix(predictions1,testing$classe)$overall
confusionMatrix(predictions1,testing$classe)$overall$Accuracy
confusionMatrix(predictions1,testing$classe)$overall[1]
error2 <- 1 - confusionMatrix(predictions2,testing$classe)[1]
error1 <- 1 - confusionMatrix(predictions1,testing$classe)[1]
error1 <- 1 - confusionMatrix(predictions1,testing$classe)[1][1]
error1 <- 1 - confusionMatrix(predictions1,testing$classe)[[1]]
error1 <- 1 - confusionMatrix(predictions1,testing$classe)$overall[[1]]
library(randomForest)
modelFit2 <- randomForest(classe ~ ., data=training, importance=TRUE, ntrees=10)
predictions2 <- predict(modelFit2,newdata=testing)
confusionMatrix(predictions2,testing$classe)
error2 <- 1 - confusionMatrix(predictions2,testing$classe)$overall[[1]]
answers <- predict(modelFit2,newdata=testData)
answers
q()
library(knitr)
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
```
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testData <- testData[, colSums(is.na(testData)) == 0]
trainingData <- trainingData[,-c(1:7)]
testData <- testData[,-c(1:7)]
dim(trainingData)
set.seed(32343)
require(lattice)
require(ggplot2)
library(caret)
inTrain <- createDataPartition(y=trainingData$classe, p=0.75, list=FALSE)
training <- trainingData[inTrain,]
testing <- trainingData[-inTrain,]
library(rattle)
modelFit1 <- train(classe ~., data=training, method="rpart")
fancyRpartPlot(modelFit1$finalModel)
predictions1 <- predict(modelFit1,newdata=testing)
confusionMatrix(predictions1,testing$classe)
error1 <- 1 - confusionMatrix(predictions1,testing$classe)$overall[[1]]
library(knitr)
trainingData <- read.csv("pml-training.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
testData <- read.csv("pml-testing.csv", header=TRUE,na.strings=c("","NA","#DIV/0!"))
trainingData <- trainingData[, colSums(is.na(trainingData)) == 0]
testData <- testData[, colSums(is.na(testData)) == 0]
trainingData <- trainingData[,-c(1:7)]
testData <- testData[,-c(1:7)]
dim(trainingData)
set.seed(32343)
library(lattice)
library(ggplot2)
library(caret)
### Split training data to training/testing for one time cross-validation
inTrain <- createDataPartition(y=trainingData$classe, p=0.75, list=FALSE)
training <- trainingData[inTrain,]
testing <- trainingData[-inTrain,]
library(rattle)
library(rpart.plot)
modelFit1 <- train(classe ~., data=training, method="rpart")
install.packages("rpart.plot")
library(rpart)
library(rattle)
library(rpart.plot)
modelFit1 <- train(classe ~., data=training, method="rpart")
fancyRpartPlot(modelFit1$finalModel)
